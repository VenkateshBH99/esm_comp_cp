{"version":3,"file":"react-multi-select-component.cjs.production.min.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/hooks/use-multi-select.tsx","../src/hooks/use-key.tsx","../src/lib/constants.tsx","../src/lib/fuzzy-match-utils.tsx","../src/select-panel/cross.tsx","../src/select-panel/default-item.tsx","../src/select-panel/select-item.tsx","../src/select-panel/select-list.tsx","../src/select-panel/index.tsx","../src/lib/debounce.tsx","../src/multi-select/arrow.tsx","../src/multi-select/header.tsx","../src/multi-select/loading.tsx","../src/multi-select/dropdown.tsx","../src/hooks/use-did-update-effect.tsx","../src/multi-select/index.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from \"react\";\n\nimport { ISelectProps, Option } from \"../lib/interfaces\";\n\nconst defaultStrings = {\n  allItemsAreSelected: \"All items are selected.\",\n  clearSearch: \"Clear Search\",\n  clearSelected: \"Clear Selected\",\n  noOptions: \"No options\",\n  search: \"Search\",\n  selectAll: \"Select All\",\n  selectSomeItems: \"Select...\",\n};\n\nconst defaultProps: Partial<ISelectProps> = {\n  value: [],\n  hasSelectAll: true,\n  className: \"multi-select\",\n  debounceDuration: 200,\n  options: [] as Option[],\n};\n\ninterface MultiSelectContextProps extends ISelectProps {\n  t: (key: string) => string;\n}\n\ninterface MultiSelectProviderProps {\n  props: ISelectProps;\n  children;\n}\n\nconst MultiSelectContext = React.createContext<MultiSelectContextProps>(\n  {} as MultiSelectContextProps\n);\n\nexport const MultiSelectProvider = ({\n  props,\n  children,\n}: MultiSelectProviderProps) => {\n  const t = (key) => props.overrideStrings?.[key] || defaultStrings[key];\n\n  return (\n    <MultiSelectContext.Provider value={{ t, ...defaultProps, ...props }}>\n      {children}\n    </MultiSelectContext.Provider>\n  );\n};\n\nexport const useMultiSelect = () => React.useContext(MultiSelectContext);\n","/*\n * copied from https://github.com/imbhargav5/rooks/blob/master/packages/shared/useKeyRef.ts\n */\n\nimport { Ref, useEffect, useCallback, useRef, useMemo } from \"react\";\n\ninterface Options {\n  /**\n   * Condition which if true, will enable the event listeners\n   */\n  when?: boolean;\n  /**\n   * Keyboardevent types to listen for. Valid options are keyDown, keyPress and keyUp\n   */\n  eventTypes?: Array<string | number>;\n  /**\n   * target ref on which the events should be listened. If no target is specified,\n   * events are listened to on the window\n   */\n  target?: Ref<HTMLElement> | null;\n}\n\nconst defaultOptions = {\n  when: true,\n  eventTypes: [\"keydown\"],\n};\n\n/**\n * useKey hook\n *\n * Fires a callback on keyboard events like keyDown, keyPress and keyUp\n *\n * @param {[string|number]} keyList\n * @param {function} callback\n * @param {Options} options\n */\nfunction useKey(\n  input: string | number | Array<string | number>,\n  callback: (e: KeyboardEvent) => any,\n  opts?: Options\n): void {\n  const keyList: Array<string | number> = useMemo(\n    () => (Array.isArray(input) ? input : [input]),\n    [input]\n  );\n  const options = Object.assign({}, defaultOptions, opts);\n  const { when, eventTypes } = options;\n  const callbackRef = useRef<(e: KeyboardEvent) => any>(callback);\n  let { target } = options;\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  const handle = useCallback(\n    (e: KeyboardEvent) => {\n      if (keyList.some((k) => e.key === k || e.code === k)) {\n        callbackRef.current(e);\n      }\n    },\n    [keyList]\n  );\n\n  useEffect((): any => {\n    if (when && typeof window !== \"undefined\") {\n      const targetNode = target ? target[\"current\"] : window;\n      eventTypes.forEach((eventType) => {\n        targetNode && targetNode.addEventListener(eventType, handle);\n      });\n      return () => {\n        eventTypes.forEach((eventType) => {\n          targetNode && targetNode.removeEventListener(eventType, handle);\n        });\n      };\n    }\n  }, [when, eventTypes, keyList, target, callback]);\n}\n\nexport { useKey };\n","export const KEY = {\n  ARROW_DOWN: \"ArrowDown\",\n  ARROW_UP: \"ArrowUp\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  SPACE: \"Space\",\n};\n","import { Option } from \"./interfaces\";\n\n/**\n * A collection of string matching algorithms built with React Select in mind.\n */\n\n// Option type from React Select and similar libraries.\ntype MapOfStrings = { [key: string]: string };\n\n/**\n * Filters React Select options and sorts by similarity to a search filter.\n * Handles partial matches, eg. searching for \"Waberg High\" will find \"Raoul\n * Wallenberg Traditional High School\". Case insensitive. Ignores\n * non-alphanumeric characters.\n *\n * @param  options  An unfiltered list of Options.\n * @param? filter  A string to compare against Option labels.\n * @param? substitutions  Strings with multiple spellings or variations that we\n *           expect to match, eg. accented characters or abbreviated words.\n *\n * @return A filtered and sorted array of Options.\n */\nexport function filterOptions(\n  options: Option[],\n  filter?: string,\n  substitutions?: MapOfStrings\n): Option[] {\n  // If the filter is blank, return the full list of Options.\n  if (!filter) {\n    return options;\n  }\n\n  const cleanFilter = cleanUpText(filter, substitutions);\n  return (\n    options\n      // Filter out undefined or null Options.\n      .filter(({ label, value }) => label != null && value != null)\n      // Create a {score, Option} pair for each Option based on its label's\n      // similarity to the filter text.\n      .map((option) => ({\n        option: option,\n        score: typeaheadSimilarity(\n          cleanUpText(option.label, substitutions),\n          cleanFilter\n        ),\n      }))\n      // Only include matches of the entire substring, with a slight\n      // affordance for transposition or extra characters.\n      .filter((pair) => pair.score >= cleanFilter.length - 2)\n      // Sort 'em by order of their score.\n      .sort((a, b) => b.score - a.score)\n      // …and grab the original Options back from their pairs.\n      .map((pair) => pair.option)\n  );\n}\n\n/**\n * Scores the similarity between two strings by returning the length of the\n * longest common subsequence. Intended for comparing strings of different\n * lengths; eg. when matching a typeahead search input with a school name.\n\n * Meant for use in an instant search box where results are being fetched\n * as a user is typing.\n *\n * @param  a  The longer string (though, we flip them if it's shorter).\n * @param  b  The shorter string, eg. a typeahead search input.\n *\n * @return The length of the longest common subsequence. Higher scores indicate\n *           closer matches.\n */\nexport function typeaheadSimilarity(a: string, b: string): number {\n  const aLength = a.length;\n  const bLength = b.length;\n  const table: any[] = [];\n\n  if (!aLength || !bLength) {\n    return 0;\n  }\n\n  // Ensure `a` isn't shorter than `b`.\n  if (aLength < bLength) {\n    [a, b] = [b, a];\n  }\n\n  // Early exit if `a` includes `b`; these will be scored higher than any\n  // other options with the same `b` (filter string), with a preference for\n  // shorter `a` strings (option labels).\n  if (a.indexOf(b) !== -1) {\n    return bLength + 1 / aLength;\n  }\n\n  // Initialize the table axes:\n  //\n  //    0 0 0 0 ... bLength\n  //    0\n  //    0\n  //\n  //   ...\n  //\n  // aLength\n  //\n  for (let x = 0; x <= aLength; ++x) {\n    table[x] = [0];\n  }\n  for (let y = 0; y <= bLength; ++y) {\n    table[0][y] = 0;\n  }\n\n  // Populate the rest of the table with a dynamic programming algorithm.\n  for (let x = 1; x <= aLength; ++x) {\n    for (let y = 1; y <= bLength; ++y) {\n      table[x][y] =\n        a[x - 1] === b[y - 1]\n          ? 1 + table[x - 1][y - 1]\n          : Math.max(table[x][y - 1], table[x - 1][y]);\n    }\n  }\n\n  return table[aLength][bLength];\n}\n\n/**\n * Apply string substitutions, remove non-alphanumeric characters, and convert\n * all letters to uppercase.\n *\n * eg. 'Scoil Bhríde Primary School' may become 'SCOILBHRIDEPRIMARYSCHOOL'.\n *\n * @param  input  An unsanitized input string.\n * @param  substitutions  Strings with multiple spellings or variations that we\n *          expect to match, for example accented characters or abbreviated\n *          words.\n *\n * @return The sanitized text.\n */\nexport function cleanUpText(\n  input?: string,\n  substitutions?: MapOfStrings\n): string {\n  if (!input) {\n    return \"\";\n  }\n\n  // Uppercase and remove all non-alphanumeric, non-accented characters.\n  // Also remove underscores.\n  input = input.toUpperCase().replace(/((?=[^\\u00E0-\\u00FC])\\W)|_/g, \"\");\n\n  if (!substitutions) {\n    return input;\n  }\n  const safeSubstitutions: MapOfStrings = substitutions; // For Flow.\n\n  // Replace all strings in `safeSubstitutions` with their standardized\n  // counterparts.\n  return Object.keys(safeSubstitutions).reduce((output, substitution) => {\n    const unsubbed = new RegExp(substitution, \"g\");\n    return output.replace(unsubbed, safeSubstitutions[substitution]);\n  }, input);\n}\n","import React from \"react\";\n\nexport const Cross = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    className=\"dropdown-search-clear-icon gray\"\n  >\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n  </svg>\n);\n","import React from \"react\";\n\nimport { Option } from \"../lib/interfaces\";\n\ninterface IDefaultItemRendererProps {\n  checked: boolean;\n  option: Option;\n  disabled?: boolean;\n  onClick;\n}\n\nconst DefaultItemRenderer = ({\n  checked,\n  option,\n  onClick,\n  disabled,\n}: IDefaultItemRendererProps) => (\n  <div className={`item-renderer ${disabled && \"disabled\"}`}>\n    <input\n      type=\"checkbox\"\n      onChange={onClick}\n      checked={checked}\n      tabIndex={-1}\n      disabled={disabled}\n    />\n    <span>{option.label}</span>\n  </div>\n);\n\nexport default DefaultItemRenderer;\n","/**\n * This component represents an individual item in the multi-select drop-down\n */\nimport React, { useRef } from \"react\";\n\nimport { useKey } from \"../hooks/use-key\";\nimport { KEY } from \"../lib/constants\";\nimport { Option } from \"../lib/interfaces\";\nimport DefaultItemRenderer from \"./default-item\";\n\ninterface ISelectItemProps {\n  itemRenderer;\n  option: Option;\n  checked?: boolean;\n  tabIndex?: number;\n  disabled?: boolean;\n  onSelectionChanged: (checked: boolean) => void;\n  onClick;\n}\n\nconst SelectItem = ({\n  itemRenderer: ItemRenderer = DefaultItemRenderer,\n  option,\n  checked,\n  tabIndex,\n  disabled,\n  onSelectionChanged,\n  onClick,\n}: ISelectItemProps) => {\n  const itemRef: any = useRef();\n\n  const onOptionCheck = (e) => {\n    toggleChecked();\n    e.preventDefault();\n  };\n\n  const toggleChecked = () => {\n    if (!disabled) {\n      onSelectionChanged(!checked);\n    }\n  };\n\n  const handleClick = (e) => {\n    toggleChecked();\n    onClick(e);\n  };\n\n  useKey([KEY.ENTER, KEY.SPACE], onOptionCheck, { target: itemRef });\n\n  return (\n    <label\n      className={`select-item ${checked && \"selected\"}`}\n      role=\"option\"\n      aria-selected={checked}\n      tabIndex={tabIndex}\n      ref={itemRef}\n    >\n      <ItemRenderer\n        option={option}\n        checked={checked}\n        onClick={handleClick}\n        disabled={disabled}\n      />\n    </label>\n  );\n};\n\nexport default SelectItem;\n","/**\n * This component represents an unadorned list of SelectItem (s).\n */\nimport React from \"react\";\n\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { Option } from \"../lib/interfaces\";\nimport SelectItem from \"./select-item\";\n\ninterface ISelectListProps {\n  options: Option[];\n  onClick: Function;\n  skipIndex: number;\n}\n\nconst SelectList = ({ options, onClick, skipIndex }: ISelectListProps) => {\n  const { disabled, value, onChange, ItemRenderer } = useMultiSelect();\n\n  const handleSelectionChanged = (option: Option, checked: boolean) => {\n    if (disabled) return;\n\n    onChange(\n      checked\n        ? [...value, option]\n        : value.filter((o: any) => o.value !== option.value)\n    );\n  };\n\n  return (\n    <>\n      {options.map((o: any, i) => {\n        const tabIndex = i + skipIndex;\n\n        return (\n          <li key={o?.key || i}>\n            <SelectItem\n              tabIndex={tabIndex}\n              option={o}\n              onSelectionChanged={(c) => handleSelectionChanged(o, c)}\n              checked={!!value.find((s) => s.value === o.value)}\n              onClick={(e) => onClick(e, tabIndex)}\n              itemRenderer={ItemRenderer}\n              disabled={o.disabled || disabled}\n            />\n          </li>\n        );\n      })}\n    </>\n  );\n};\n\nexport default SelectList;\n","/**\n * This component represents the entire panel which gets dropped down when the\n * user selects the component.  It encapsulates the search filter, the\n * Select-all item, and the list of options.\n */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { useKey } from \"../hooks/use-key\";\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { KEY } from \"../lib/constants\";\nimport { debounce } from \"../lib/debounce\";\nimport { filterOptions } from \"../lib/fuzzy-match-utils\";\nimport { Cross } from \"./cross\";\nimport SelectItem from \"./select-item\";\nimport SelectList from \"./select-list\";\n\nenum FocusType {\n  SEARCH = 0,\n  NONE = -1,\n}\n\nconst SelectPanel = () => {\n  const {\n    t,\n    onChange,\n    options,\n    value,\n    filterOptions: customFilterOptions,\n    selectAllLabel,\n    ItemRenderer,\n    disabled,\n    disableSearch,\n    hasSelectAll,\n    ClearIcon,\n    debounceDuration,\n  } = useMultiSelect();\n\n  const listRef = useRef<any>();\n  const searchInputRef = useRef<any>();\n  const [searchText, setSearchText] = useState(\"\");\n  const [filteredOptions, setFilteredOptions] = useState(options);\n  const [searchTextForFilter, setSearchTextForFilter] = useState(\"\");\n  const [focusIndex, setFocusIndex] = useState(0);\n  const debouncedSearch = useCallback(\n    debounce((query) => setSearchTextForFilter(query), debounceDuration),\n    []\n  );\n\n  const skipIndex = useMemo(() => {\n    let start = 0;\n\n    if (!disableSearch) start += 1; // if search is enabled then +1 to skipIndex\n    if (hasSelectAll) start += 1; // if select-all is enabled then +1 to skipIndex\n\n    return start;\n  }, [disableSearch, hasSelectAll]);\n\n  const selectAllOption = {\n    label: selectAllLabel || t(\"selectAll\"),\n    value: \"\",\n  };\n\n  const selectAllValues = (checked) => {\n    const filteredValues = filteredOptions\n      .filter((o) => !o.disabled)\n      .map((o) => o.value);\n\n    if (checked) {\n      const selectedValues = value.map((o) => o.value);\n      const finalSelectedValues = [...selectedValues, ...filteredValues];\n\n      return filteredOptions.filter((o) =>\n        finalSelectedValues.includes(o.value)\n      );\n    }\n\n    return value.filter((o) => !filteredValues.includes(o.value));\n  };\n\n  const selectAllChanged = (checked: boolean) => {\n    const newOptions = selectAllValues(checked);\n    onChange(newOptions);\n  };\n\n  const handleSearchChange = (e) => {\n    debouncedSearch(e.target.value);\n    setSearchText(e.target.value);\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleClear = () => {\n    setSearchTextForFilter(\"\");\n    setSearchText(\"\");\n    searchInputRef?.current?.focus();\n  };\n\n  const handleItemClicked = (index: number) => setFocusIndex(index);\n\n  // Arrow Key Navigation\n  const handleKeyDown = (e) => {\n    switch (e.code) {\n      case KEY.ARROW_UP:\n        updateFocus(-1);\n        break;\n      case KEY.ARROW_DOWN:\n        updateFocus(1);\n        break;\n      default:\n        return;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  useKey([KEY.ARROW_DOWN, KEY.ARROW_UP], handleKeyDown, {\n    target: listRef,\n  });\n\n  const handleSearchFocus = () => {\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const getFilteredOptions = async () =>\n    customFilterOptions\n      ? await customFilterOptions(options, searchTextForFilter)\n      : filterOptions(options, searchTextForFilter);\n\n  const updateFocus = (offset: number) => {\n    let newFocus = focusIndex + offset;\n    newFocus = Math.max(0, newFocus);\n    newFocus = Math.min(newFocus, options.length + Math.max(skipIndex - 1, 0));\n    setFocusIndex(newFocus);\n  };\n\n  useEffect(() => {\n    listRef?.current?.querySelector(`[tabIndex='${focusIndex}']`)?.focus();\n  }, [focusIndex]);\n\n  const [isAllOptionSelected, hasSelectableOptions] = useMemo(() => {\n    const filteredOptionsList = filteredOptions.filter((o) => !o.disabled);\n    return [\n      filteredOptionsList.every(\n        (o) => value.findIndex((v) => v.value === o.value) !== -1\n      ),\n      filteredOptionsList.length !== 0,\n    ];\n    // eslint-disable-next-line\n  }, [filteredOptions, value]);\n\n  useEffect(() => {\n    getFilteredOptions().then(setFilteredOptions);\n  }, [searchTextForFilter, options]);\n\n  return (\n    <div className=\"select-panel\" role=\"listbox\" ref={listRef}>\n      {!disableSearch && (\n        <div className=\"search\">\n          <input\n            placeholder={t(\"search\")}\n            type=\"text\"\n            aria-describedby={t(\"search\")}\n            onChange={handleSearchChange}\n            onFocus={handleSearchFocus}\n            value={searchText}\n            ref={searchInputRef}\n            tabIndex={0}\n          />\n          <button\n            type=\"button\"\n            className=\"search-clear-button\"\n            hidden={!searchText}\n            onClick={handleClear}\n            aria-label={t(\"clearSearch\")}\n          >\n            {ClearIcon || <Cross />}\n          </button>\n        </div>\n      )}\n\n      <ul className=\"options\">\n        {hasSelectAll && hasSelectableOptions && (\n          <SelectItem\n            tabIndex={skipIndex === 1 ? 0 : 1}\n            checked={isAllOptionSelected}\n            option={selectAllOption}\n            onSelectionChanged={selectAllChanged}\n            onClick={() => handleItemClicked(1)}\n            itemRenderer={ItemRenderer}\n            disabled={disabled}\n          />\n        )}\n\n        {filteredOptions.length ? (\n          <SelectList\n            skipIndex={skipIndex}\n            options={filteredOptions}\n            onClick={(_e, index) => handleItemClicked(index)}\n          />\n        ) : (\n          <li className=\"no-options\">{t(\"noOptions\")}</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default SelectPanel;\n","export const debounce = (func, wait) => {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      func.apply(null, args);\n    }, wait);\n  };\n};\n","import React from \"react\";\n\nexport const Arrow = ({ expanded }) => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    className=\"dropdown-heading-dropdown-arrow gray\"\n  >\n    <path d={expanded ? \"M18 15 12 9 6 15\" : \"M6 9L12 15 18 9\"} />\n  </svg>\n);\n","import React from \"react\";\n\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\n\nexport const DropdownHeader = () => {\n  const { t, value, options, valueRenderer } = useMultiSelect();\n\n  const noneSelected = value.length === 0;\n  const allSelected = value.length === options.length;\n  const customText = valueRenderer && valueRenderer(value, options);\n\n  const getSelectedText = () => value.map((s) => s.label).join(\", \");\n\n  return noneSelected ? (\n    <span className=\"gray\">{customText || t(\"selectSomeItems\")}</span>\n  ) : (\n    <span>\n      {customText ||\n        (allSelected ? t(\"allItemsAreSelected\") : getSelectedText())}\n    </span>\n  );\n};\n","import React from \"react\";\n\nexport const Loading = ({ size = 24 }) => (\n  <span\n    style={{\n      width: size,\n      marginRight: \"0.2rem\",\n    }}\n  >\n    <svg\n      width={size}\n      height={size}\n      className=\"spinner\"\n      viewBox=\"0 0 50 50\"\n      style={{ display: \"inline\", verticalAlign: \"middle\" }}\n    >\n      <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" className=\"path\"></circle>\n    </svg>\n  </span>\n);\n","/**\n * A generic dropdown component.  It takes the children of the component\n * and hosts it in the component.  When the component is selected, it\n * drops-down the contentComponent and applies the contentProps.\n */\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { useDidUpdateEffect } from \"../hooks/use-did-update-effect\";\nimport { useKey } from \"../hooks/use-key\";\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { KEY } from \"../lib/constants\";\nimport SelectPanel from \"../select-panel\";\nimport { Cross } from \"../select-panel/cross\";\nimport { Arrow } from \"./arrow\";\nimport { DropdownHeader } from \"./header\";\nimport { Loading } from \"./loading\";\n\nconst Dropdown = () => {\n  const {\n    t,\n    onMenuToggle,\n    ArrowRenderer,\n    shouldToggleOnHover,\n    isLoading,\n    disabled,\n    onChange,\n    labelledBy,\n    value,\n    isOpen,\n    defaultIsOpen,\n    ClearSelectedIcon,\n  } = useMultiSelect();\n\n  const [isInternalExpand, setIsInternalExpand] = useState(true);\n  const [expanded, setExpanded] = useState(defaultIsOpen);\n  const [hasFocus, setHasFocus] = useState(false);\n  const FinalArrow = ArrowRenderer || Arrow;\n\n  const wrapper: any = useRef();\n\n  useDidUpdateEffect(() => {\n    onMenuToggle && onMenuToggle(expanded);\n  }, [expanded]);\n\n  useEffect(() => {\n    if (defaultIsOpen === undefined && typeof isOpen === \"boolean\") {\n      setIsInternalExpand(false);\n      setExpanded(isOpen);\n    }\n  }, [isOpen]);\n\n  const handleKeyDown = (e) => {\n    // allows space and enter when focused on input/button\n    if (\n      [\"text\", \"button\"].includes(e.target.type) &&\n      [KEY.SPACE, KEY.ENTER].includes(e.code)\n    ) {\n      return;\n    }\n\n    if (isInternalExpand) {\n      if (e.code === KEY.ESCAPE) {\n        setExpanded(false);\n        wrapper?.current?.focus();\n      } else {\n        setExpanded(true);\n      }\n    }\n    e.preventDefault();\n  };\n\n  useKey([KEY.ENTER, KEY.ARROW_DOWN, KEY.SPACE, KEY.ESCAPE], handleKeyDown, {\n    target: wrapper,\n  });\n\n  const handleHover = (iexpanded: boolean) => {\n    isInternalExpand && shouldToggleOnHover && setExpanded(iexpanded);\n  };\n\n  const handleFocus = () => !hasFocus && setHasFocus(true);\n\n  const handleBlur = (e) => {\n    if (!e.currentTarget.contains(e.relatedTarget) && isInternalExpand) {\n      setHasFocus(false);\n      setExpanded(false);\n    }\n  };\n\n  const handleMouseEnter = () => handleHover(true);\n\n  const handleMouseLeave = () => handleHover(false);\n\n  const toggleExpanded = () => {\n    isInternalExpand && setExpanded(isLoading || disabled ? false : !expanded);\n  };\n\n  const handleClearSelected = (e) => {\n    e.stopPropagation();\n    onChange([]);\n    isInternalExpand && setExpanded(false);\n  };\n\n  return (\n    <div\n      tabIndex={0}\n      className=\"dropdown-container\"\n      aria-labelledby={labelledBy}\n      aria-expanded={expanded}\n      aria-readonly={true}\n      aria-disabled={disabled}\n      ref={wrapper}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div className=\"dropdown-heading\" onClick={toggleExpanded}>\n        <div className=\"dropdown-heading-value\">\n          <DropdownHeader />\n        </div>\n        {isLoading && <Loading />}\n        {value.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"clear-selected-button\"\n            onClick={handleClearSelected}\n            disabled={disabled}\n            aria-label={t(\"clearSelected\")}\n          >\n            {ClearSelectedIcon || <Cross />}\n          </button>\n        )}\n        <FinalArrow expanded={expanded} />\n      </div>\n      {expanded && (\n        <div className=\"dropdown-content\">\n          <div className=\"panel-content\">\n            <SelectPanel />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import { useEffect, useRef } from \"react\";\n\n/**\n * similar to `useEffect` but gets triggered only when value changes\n * @param fn executable function on dependency updates\n * @param inputs dependency array\n */\nexport function useDidUpdateEffect(fn, inputs) {\n  const didMountRef = useRef(false);\n\n  useEffect(() => {\n    if (didMountRef.current) fn();\n    else didMountRef.current = true;\n  }, inputs);\n}\n","import \"../style.css\";\n\nimport React from \"react\";\n\nimport { MultiSelectProvider } from \"../hooks/use-multi-select\";\nimport { ISelectProps } from \"../lib/interfaces\";\nimport Dropdown from \"./dropdown\";\n\nconst MultiSelect = (props: ISelectProps) => (\n  <MultiSelectProvider props={props}>\n    <div className={`rmsc ${props.className || \"multi-select\"}`}>\n      <Dropdown />\n    </div>\n  </MultiSelectProvider>\n);\n\nexport default MultiSelect;\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","defaultStrings","allItemsAreSelected","clearSearch","clearSelected","noOptions","search","selectAll","selectSomeItems","defaultProps","value","hasSelectAll","className","debounceDuration","options","MultiSelectContext","React","createContext","MultiSelectProvider","props","children","Provider","t","key","overrideStrings","useMultiSelect","useContext","defaultOptions","when","eventTypes","useKey","input","callback","opts","keyList","useMemo","Array","isArray","Object","assign","callbackRef","useRef","target","useEffect","current","handle","useCallback","e","some","k","code","window","targetNode","forEach","eventType","addEventListener","removeEventListener","KEY","ARROW_DOWN","ARROW_UP","ENTER","ESCAPE","SPACE","typeaheadSimilarity","a","b","aLength","length","bLength","table","indexOf","x","y","Math","max","cleanUpText","substitutions","toUpperCase","replace","safeSubstitutions","keys","reduce","output","substitution","unsubbed","RegExp","Cross","width","height","fill","stroke","strokeWidth","x1","y1","x2","y2","DefaultItemRenderer","checked","option","onClick","disabled","onChange","tabIndex","label","SelectItem","itemRenderer","ItemRenderer","onSelectionChanged","itemRef","toggleChecked","preventDefault","role","SelectList","skipIndex","map","o","i","c","handleSelectionChanged","filter","find","s","FocusType","SelectPanel","filterOptions","customFilterOptions","selectAllLabel","disableSearch","ClearIcon","listRef","searchInputRef","searchText","setSearchText","useState","filteredOptions","setFilteredOptions","searchTextForFilter","setSearchTextForFilter","focusIndex","setFocusIndex","debouncedSearch","func","wait","timeout","args","clearTimeout","setTimeout","apply","debounce","query","start","selectAllOption","handleItemClicked","index","updateFocus","stopPropagation","offset","newFocus","min","querySelector","focus","isAllOptionSelected","hasSelectableOptions","filteredOptionsList","every","findIndex","v","async","cleanFilter","score","pair","sort","getFilteredOptions","then","placeholder","SEARCH","onFocus","hidden","newOptions","filteredValues","finalSelectedValues","includes","selectAllValues","_e","Arrow","expanded","d","DropdownHeader","valueRenderer","noneSelected","allSelected","customText","join","Loading","size","marginRight","viewBox","display","verticalAlign","cx","cy","r","Dropdown","onMenuToggle","ArrowRenderer","shouldToggleOnHover","isLoading","labelledBy","isOpen","defaultIsOpen","ClearSelectedIcon","isInternalExpand","setIsInternalExpand","setExpanded","hasFocus","setHasFocus","FinalArrow","wrapper","fn","inputs","didMountRef","useDidUpdateEffect","undefined","handleHover","iexpanded","onBlur","currentTarget","contains","relatedTarget","onMouseEnter","onMouseLeave"],"mappings":"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"}