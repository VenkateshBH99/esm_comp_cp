[{"C:\\Esamudaay\\esm_comp_cp\\src\\index.js":"1","C:\\Esamudaay\\esm_comp_cp\\src\\App.js":"2","C:\\Esamudaay\\esm_comp_cp\\src\\reportWebVitals.js":"3","C:\\Esamudaay\\esm_comp_cp\\src\\Components\\Content.jsx":"4","C:\\Esamudaay\\esm_comp_cp\\src\\Components\\Title.jsx":"5","C:\\Esamudaay\\esm_comp_cp\\src\\Utility\\config.js":"6","C:\\Esamudaay\\esm_comp_cp\\src\\Utility\\Style.js":"7","C:\\Esamudaay\\esm_comp_cp\\src\\Utility\\filterList.js":"8","C:\\Esamudaay\\esm_comp_cp\\src\\Utility\\paramsConvert.js":"9","C:\\Esamudaay\\esm_comp_cp\\src\\Components\\Filters.jsx":"10","C:\\Esamudaay\\esm_comp_cp\\src\\Components\\Counter.jsx":"11","C:\\Esamudaay\\esm_comp_cp\\src\\Components\\DatePicker.jsx":"12"},{"size":517,"mtime":1625542395783,"results":"13","hashOfConfig":"14"},{"size":553,"mtime":1625542395774,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1625542395784,"results":"16","hashOfConfig":"14"},{"size":12741,"mtime":1625545328079,"results":"17","hashOfConfig":"14"},{"size":175,"mtime":1625542395779,"results":"18","hashOfConfig":"14"},{"size":852,"mtime":1625545601046,"results":"19","hashOfConfig":"14"},{"size":392,"mtime":1625542395780,"results":"20","hashOfConfig":"14"},{"size":2321,"mtime":1625542395782,"results":"21","hashOfConfig":"14"},{"size":939,"mtime":1625542395783,"results":"22","hashOfConfig":"14"},{"size":675,"mtime":1625542395778,"results":"23","hashOfConfig":"14"},{"size":863,"mtime":1625542395776,"results":"24","hashOfConfig":"14"},{"size":2532,"mtime":1625542395778,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1dueap5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"C:\\Esamudaay\\esm_comp_cp\\src\\index.js",[],["55","56"],"C:\\Esamudaay\\esm_comp_cp\\src\\App.js",["57","58"],"import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Content from './Components/Content';\r\nimport Title from './Components/Title';\r\n\r\n\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Title></Title>\r\n      <BrowserRouter>\r\n        <Switch>\r\n\r\n          <Route path=\"/:circleId/:authToken\" >\r\n\r\n            <Content></Content>\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Esamudaay\\esm_comp_cp\\src\\reportWebVitals.js",[],"C:\\Esamudaay\\esm_comp_cp\\src\\Components\\Content.jsx",["59","60","61","62","63","64","65","66","67","68","69","70","71"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { Button } from 'react-bootstrap';\r\nimport DownloadButton from '@material-ui/core/Button';\r\n\r\nimport axios from 'axios';\r\nimport config from '../Utility/config';\r\nimport blockStyle from '../Utility/Style';\r\nimport Counter from '../Components/Counter';\r\nimport Filters from '../Components/Filters';\r\nimport DatePicker from '../Components/DatePicker'\r\nimport { orderFilters, paymentFilters,deliveryFilters, paymentModeFilters } from '../Utility/filterList';\r\nimport { getCustomerAddress, getDateFormat, getDeliveryAgentName } from \"../Utility/paramsConvert\";\r\nconst useStyles = makeStyles(blockStyle);\r\nvar fileDownload = require('js-file-download');\r\n\r\nconst Content = (props) => {\r\n  const classes = useStyles();\r\n  const [tableData, setTableData] = useState([]);\r\n  const [orderCount, setorderCount] = useState(0);\r\n  const [orderSum, setorderSum] = useState(0);\r\n  const [orderSeller, setorderSeller] = useState(0);\r\n  const [customer, setcustomer] = useState(0);\r\n  const [orderStatus, setorderStatus] = useState({});\r\n  const [filterCompleted, setFilterCompleted] = useState(true)\r\n  const [page, setPage] = useState(1);\r\n  const { circleId, authToken } = useParams();\r\n  const [activeOrderFilter, setActiveOrderFilter] = useState([]);\r\n  const [activePaymentFilter, setActivePaymentFilter] = useState([]);\r\n  const [activeDeliveryFilter, setActiveDeliveryFilter] = useState([]);\r\n  const [activePaymentModeFilter, setActivePaymentModeFilter] = useState([]);\r\n  const [fromEpochDate, setFromEpochDate] = useState();\r\n  const [toEpochDate, setToEpochDate] = useState();\r\n\r\n \r\n  const onOrderFilterChange = (filter) => {\r\n    setActiveOrderFilter(Array.isArray(filter) ? filter.map( filter => (filter.value)) : []);\r\n    filter.map(x=>activeOrderFilter.includes(x.value));\r\n    setFilterCompleted(!filterCompleted)\r\n  }\r\n\r\n  const onPaymentFilterChange = (filter) => {\r\n    \r\n    setActivePaymentFilter(Array.isArray(filter) ? filter.map( filter => (filter.value)) : []);\r\n    setFilterCompleted(!filterCompleted)\r\n  }\r\n\r\n  const onDeliveryFilterChange = (filter) => {\r\n    setActiveDeliveryFilter(Array.isArray(filter) ? filter.map( filter => (filter.value)) : []);\r\n    setFilterCompleted(!filterCompleted)\r\n  }\r\n\r\n  const onPaymentModeFilterChange = (filter) => {\r\n\r\n    setActivePaymentModeFilter(Array.isArray(filter) ? filter.map( filter => (filter.value)) : []);\r\n    setFilterCompleted(!filterCompleted)\r\n  }\r\n\r\n\r\n  const changePage = (e, value) => {\r\n\r\n    setPage(value)\r\n\r\n\r\n  }\r\n\r\n  const onDateEpochChange = (val, check) => {\r\n    if (check === \"ChangeFrom\") {\r\n      setFromEpochDate(val)\r\n\r\n    }\r\n    else if (check === \"ChangeTo\") {\r\n      setToEpochDate(val)\r\n    }\r\n    setFilterCompleted(!filterCompleted)\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const token = localStorage.getItem(\"authenticationToken\");\r\n    const circleID = localStorage.getItem(\"circle_id\");\r\n\r\n    console.log(process.env);\r\n    //Making API call to backend\r\n    axios.get(config.apiUrl, {\r\n      headers: {\r\n        'Authorization': \"JWT \" + { authToken }.authToken\r\n      },\r\n      params: {\r\n        circle_id: { circleId }.circleId,\r\n        order_status: activeOrderFilter.join(),\r\n        page: page,\r\n        delivery_type: activeDeliveryFilter.join(),\r\n        payment_status: activePaymentFilter.join(),\r\n        payment_mode: activePaymentModeFilter.join(),\r\n        dt_last_modified_from: fromEpochDate,\r\n        dt_last_modified_to: toEpochDate\r\n      }\r\n    })\r\n      .then(response => {\r\n        // alert(\"success\")\r\n        setTableData(response.data.results)\r\n        setorderCount(response.data.count)\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Unauthorize or slow internet\")\r\n      })\r\n\r\n  }, [filterCompleted, page])\r\n\r\n  const downloadAPI=()=>{\r\n    const token = localStorage.getItem(\"authenticationToken\");\r\n    const circleID = localStorage.getItem(\"circle_id\");\r\n    \r\n    //Making API call to backend\r\n    axios.get(config.downloadUrl, {\r\n      headers: {\r\n        'Authorization': \"JWT \" + { authToken }.authToken\r\n      },\r\n      params: {\r\n        circle_id: { circleId }.circleId,\r\n        order_status: activeOrderFilter.join(),\r\n        delivery_type: activeDeliveryFilter.join(),\r\n        payment_status: activePaymentFilter.join(),\r\n        payment_mode: activePaymentModeFilter.join(),\r\n        dt_last_modified_from: fromEpochDate,\r\n        dt_last_modified_to: toEpochDate\r\n        \r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(Date().toLocaleString());\r\n        fileDownload(response.data, 'Order Data ('+Date().toString()+').csv');\r\n        \r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Unauthorize or slow internet\")\r\n      })\r\n  }\r\n\r\n  const rows = (tableData.map((item, key) => {\r\n    \r\n    return {\r\n      id: item.order.order_short_number,\r\n      Order_created_date: getDateFormat(item.order.created),\r\n      last_update: getDateFormat(item.order.modified),\r\n      Status: item.order.order_status,\r\n      Seller: item.order.business_name,\r\n      Order_amt: item.order.order_total,\r\n      Delivery_type: item.order.delivery_type,\r\n      Delivery_charges: item.order.delivery_charges,\r\n      Other_charges: item.order.other_charges,\r\n      Item_Total: item.order.item_total,\r\n      Delivery_Agent: getDeliveryAgentName(item.order.da_info),\r\n      Payment_Status: item.order.payment_info.status,\r\n      Payment_mode: item.order.payment_info.via,\r\n      Payment_id: item.order.payment_info.payment_id,\r\n      Customer_name: item.order.customer_name,\r\n      Customer_number: item.order.customer_phones,\r\n      Customer_address: getCustomerAddress(item.order.delivery_address),\r\n      long_id: item.order.order_id\r\n\r\n    }\r\n  }))\r\n\r\n  const columns = [\r\n    { id: \"id\", label: \"OrderId\", minWidth: 50, align: 'left' },\r\n    { id: \"Order_created_date\", label: \"Order Created Date\", minWidth: 100, align: 'left' },\r\n    { id: \"last_update\", label: \"Order Last Update Date\", minWidth: 100, align: 'left' },\r\n    { id: \"Status\", label: \"Status\", minWidth: 50, align: 'left' },\r\n    { id: \"Seller\", label: \"Seller\", minWidth: 50, align: 'left' },\r\n    { id: \"Order_amt\", label: \"Order Amt\", minWidth: 50, align: 'left' },\r\n    { id: \"Delivery_Type\", label: \"Delivery Type\", minWidth: 50, align: 'left' },\r\n    { id: \"Delivery_Charges\", label: \"Delivery Charges\", minWidth: 50, align: 'left' },\r\n    { id: \"Other_charges\", label: \"Other Charges\", minWidth: 50, align: 'left' },\r\n    { id: \"Item_Total\", label: \"Item Total\", minWidth: 50, align: 'left' },\r\n    { id: \"Delivery_Agent\", label: \"Delivery Agent\", minWidth: 50, align: 'left' },\r\n    { id: \"Payment_Status\", label: \"Payment Status\", minWidth: 50, align: 'left' },\r\n    { id: \"Payment_mode\", label: \"Payment Mode\", minWidth: 50, align: 'left' },\r\n    { id: \"Payment_id\", label: \"Payment id\", minWidth: 50, align: 'left' },\r\n    { id: \"Customer_name\", label: \"Customer Name\", minWidth: 50, align: 'left' },\r\n    { id: \"Customer_number\", label: \"Customer Number\", minWidth: 50, align: 'left' },\r\n    { id: \"Customer_address\", label: \"Customer Address\", minWidth: 50, align: 'left' },\r\n    { id: \"long_id\", label: \"Long OrderId\", minWidth: 50, align: 'left' },\r\n  ];\r\n\r\n  \r\n\r\n  return (\r\n\r\n\r\n    <div className={classes.root}>\r\n\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item xs={4} style={{ padding: \"10px\" }}>\r\n            <DatePicker handleDateChange={onDateEpochChange} ></DatePicker>\r\n        </Grid>\r\n\r\n        <Grid item xs={2} style={{ padding: \"4px\" }}>\r\n            <h4>ORDER STATUS</h4>\r\n          <Filters handleFilterChange={onOrderFilterChange}  activeFilterFilter={activeOrderFilter} filterUtility={orderFilters} ></Filters>\r\n            <h4>DELIVERY STATUS</h4>\r\n          <Filters handleFilterChange={onDeliveryFilterChange}  activeFilterFilter={activeDeliveryFilter} filterUtility={deliveryFilters}></Filters> \r\n        </Grid>\r\n\r\n        <Grid item xs={2} style={{ padding: \"4px\" }}>\r\n            <h4>PAYMENT STATUS</h4>\r\n          <Filters handleFilterChange={onPaymentFilterChange}  activeFilterFilter={activePaymentFilter} filterUtility={paymentFilters}></Filters>\r\n            <h4>PAYMENT MODE</h4>\r\n          <Filters handleFilterChange={onPaymentModeFilterChange}  activeFilterFilter={activePaymentModeFilter} filterUtility={paymentModeFilters}></Filters>      \r\n        </Grid>\r\n\r\n        <Grid item xs={3} style={{ paddingTop: \"60px\" }}>\r\n          <Counter orderCount={orderCount} />\r\n        </Grid>\r\n\r\n      </Grid>\r\n     \r\n\r\n      <Grid container spacing={3} style={{ paddingTop: \"30px\"}} >\r\n        <Grid item xs={1} >\r\n          <Button onClick={() => {\r\n            setFromEpochDate();\r\n            setToEpochDate();\r\n            setFilterCompleted(!filterCompleted)\r\n          }}>\r\n            <RefreshIcon >\r\n            </RefreshIcon>\r\n          </Button>\r\n        </Grid>\r\n        \r\n        <Grid item xs={1} style={{ paddingLeft: \"5px\" }}>\r\n          {/* <h4>Download File</h4> */}\r\n          <DownloadButton variant=\"contained\" color=\"primary\" onClick={downloadAPI}>Download</DownloadButton>\r\n        </Grid>\r\n\r\n      </Grid>\r\n  \r\n      <div style={{ marginTop: \"0em\" }}>\r\n\r\n        <Grid container spacing={3}>\r\n          \r\n          <Grid item xs={12}>\r\n            <TableContainer component={Paper} style={{ height: \"100%\", width: \"100%\", display: \"block\", overflow: \"auto\" }}>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (<TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{\r\n                        minWidth: column.minWidth,\r\n\r\n                      }}\r\n                    >\r\n                       <strong>{column.label}</strong>\r\n                    </TableCell>))}\r\n\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.map((row) => {\r\n\r\n                    return row ?\r\n                      (\r\n                        <TableRow key={row.id}>\r\n                          <TableCell align=\"left\">{row.id}</ TableCell>\r\n                          <TableCell align=\"left\">{row.Order_created_date}</TableCell>\r\n                          <TableCell align=\"left\">{row.last_update}</TableCell>\r\n                          <TableCell align=\"left\">{row.Status}</TableCell>\r\n                          <TableCell align=\"left\">{row.Seller}</TableCell>\r\n                          <TableCell align=\"left\">{row.Order_amt}</TableCell>\r\n                          <TableCell align=\"left\">{row.Delivery_type}</TableCell>\r\n                          <TableCell align=\"left\">{row.Delivery_charges}</TableCell>\r\n                          <TableCell align=\"left\">{row.Other_charges}</TableCell>\r\n                          <TableCell align=\"left\">{row.Item_Total}</TableCell>\r\n                          <TableCell align=\"left\">{row.Delivery_Agent}</TableCell>\r\n                          <TableCell align=\"left\">{row.Payment_Status}</TableCell>\r\n                          <TableCell align=\"left\">{row.Payment_mode}</TableCell>\r\n                          <TableCell align=\"left\">{row.Payment_id}</TableCell>\r\n                          <TableCell align=\"left\">{row.Customer_name}</TableCell>\r\n                          <TableCell align=\"left\">{row.Customer_number}</TableCell>\r\n                          <TableCell align=\"left\">{row.Customer_address}</TableCell>\r\n                          <TableCell align=\"left\">{row.long_id}</TableCell>\r\n\r\n                        </TableRow>\r\n                      ) : null\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n\r\n            <Pagination style={{ paddingTop: \"20px\", scrollPaddingBottom: \"20px\", alignContent: \"center\" }} count={Math.ceil(orderCount / 10)} onChange={changePage} showFirstButton showLastButton />\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Content;","C:\\Esamudaay\\esm_comp_cp\\src\\Components\\Title.jsx",[],"C:\\Esamudaay\\esm_comp_cp\\src\\Utility\\config.js",["72","73","74"],"C:\\Esamudaay\\esm_comp_cp\\src\\Utility\\Style.js",[],"C:\\Esamudaay\\esm_comp_cp\\src\\Utility\\filterList.js",[],"C:\\Esamudaay\\esm_comp_cp\\src\\Utility\\paramsConvert.js",[],"C:\\Esamudaay\\esm_comp_cp\\src\\Components\\Filters.jsx",["75"],"import React, { useState, useEffect } from 'react';\r\nimport MultiSelect from \"react-multi-select-component\";\r\n\r\n\r\n\r\nconst Filters = (props) => {\r\n    \r\n\r\n  \r\n\r\n  const [selected, setSelected] = useState([]);\r\n  \r\n  const handleChange = (e) => {\r\n\r\n    setSelected(Array.isArray(e) ? e.map( x => (x.value)) : []);\r\n    props.handleFilterChange(e);\r\n    \r\n  }\r\n\r\n\r\n    return (\r\n        <div>\r\n             \r\n      <MultiSelect\r\n        options={props.filterUtility}\r\n        value={props.filterUtility.filter(obj => selected.includes(obj.value))}\r\n        onChange={handleChange}\r\n        labelledBy=\"Select\"\r\n      />\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Filters;","C:\\Esamudaay\\esm_comp_cp\\src\\Components\\Counter.jsx",[],"C:\\Esamudaay\\esm_comp_cp\\src\\Components\\DatePicker.jsx",["76"],"import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport { getDateEpoch } from '../Utility/paramsConvert';\r\n\r\nexport default function DatePicker(props) {\r\n    // The first commit of Material-UI\r\n    const [fromDate, setFromDate] = React.useState(new Date());\r\n    const [toDate, setToDate] = React.useState(new Date());\r\n    const clickedRefFrom = React.useRef(false);\r\n    const clickedRefTo= React.useRef(false);\r\n    \r\n\r\n    const handleDateFromChange = (date) => {\r\n        let newFromDate=new Date(date.toString().replace(/[0-9][0-9]:.* GMT/,'00:00:00 GMT'));\r\n        clickedRefFrom.current = true;\r\n        setFromDate(newFromDate);\r\n        props.handleDateChange(String(getDateEpoch(newFromDate)).slice(0, 10), \"ChangeFrom\")\r\n\r\n\r\n\r\n    };\r\n    const handleDateToChange = (date) => {\r\n        let newToDate=new Date(date.toString().replace(/[0-9][0-9]:.* GMT/,'23:59:59 GMT'));\r\n        clickedRefTo.current = true;\r\n        setToDate(newToDate);\r\n        props.handleDateChange(String(getDateEpoch(newToDate)).slice(0, 10), \"ChangeTo\")\r\n\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justify=\"space-around\">\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Orders From\"\r\n                    value={clickedRefFrom.current? fromDate:null}\r\n                    onChange={handleDateFromChange}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                />\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-dialog\"\r\n                    label=\"Orders To\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    value={clickedRefTo.current? toDate:null}\r\n                    onChange={handleDateToChange}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                />\r\n\r\n            </Grid>\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":10,"nodeType":"83","messageId":"84","endLine":1,"endColumn":18},{"ruleId":"81","severity":1,"message":"85","line":1,"column":20,"nodeType":"83","messageId":"84","endLine":1,"endColumn":29},{"ruleId":"81","severity":1,"message":"86","line":34,"column":10,"nodeType":"83","messageId":"84","endLine":34,"endColumn":18},{"ruleId":"81","severity":1,"message":"87","line":34,"column":20,"nodeType":"83","messageId":"84","endLine":34,"endColumn":31},{"ruleId":"81","severity":1,"message":"88","line":35,"column":10,"nodeType":"83","messageId":"84","endLine":35,"endColumn":21},{"ruleId":"81","severity":1,"message":"89","line":35,"column":23,"nodeType":"83","messageId":"84","endLine":35,"endColumn":37},{"ruleId":"81","severity":1,"message":"90","line":36,"column":10,"nodeType":"83","messageId":"84","endLine":36,"endColumn":18},{"ruleId":"81","severity":1,"message":"91","line":36,"column":20,"nodeType":"83","messageId":"84","endLine":36,"endColumn":31},{"ruleId":"81","severity":1,"message":"92","line":37,"column":10,"nodeType":"83","messageId":"84","endLine":37,"endColumn":21},{"ruleId":"81","severity":1,"message":"93","line":37,"column":23,"nodeType":"83","messageId":"84","endLine":37,"endColumn":37},{"ruleId":"81","severity":1,"message":"94","line":95,"column":11,"nodeType":"83","messageId":"84","endLine":95,"endColumn":16},{"ruleId":"81","severity":1,"message":"95","line":96,"column":11,"nodeType":"83","messageId":"84","endLine":96,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":124,"column":6,"nodeType":"98","endLine":124,"endColumn":29,"suggestions":"99"},{"ruleId":"81","severity":1,"message":"94","line":127,"column":11,"nodeType":"83","messageId":"84","endLine":127,"endColumn":16},{"ruleId":"81","severity":1,"message":"95","line":128,"column":11,"nodeType":"83","messageId":"84","endLine":128,"endColumn":19},{"ruleId":"81","severity":1,"message":"100","line":1,"column":7,"nodeType":"83","messageId":"84","endLine":1,"endColumn":17},{"ruleId":"81","severity":1,"message":"101","line":2,"column":7,"nodeType":"83","messageId":"84","endLine":2,"endColumn":15},{"ruleId":"81","severity":1,"message":"102","line":3,"column":7,"nodeType":"83","messageId":"84","endLine":3,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"103","line":7,"column":5,"nodeType":"83","messageId":"84","endLine":7,"endColumn":23},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'orderSum' is assigned a value but never used.","'setorderSum' is assigned a value but never used.","'orderSeller' is assigned a value but never used.","'setorderSeller' is assigned a value but never used.","'customer' is assigned a value but never used.","'setcustomer' is assigned a value but never used.","'orderStatus' is assigned a value but never used.","'setorderStatus' is assigned a value but never used.","'token' is assigned a value but never used.","'circleID' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeDeliveryFilter', 'activeOrderFilter', 'activePaymentFilter', 'activePaymentModeFilter', 'authToken', 'circleId', 'fromEpochDate', and 'toEpochDate'. Either include them or remove the dependency array.","ArrayExpression",["106"],"'IS_STAGING' is assigned a value but never used.","'IS_LOCAL' is assigned a value but never used.","'IS_PROD' is assigned a value but never used.","'KeyboardTimePicker' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [activeDeliveryFilter, activeOrderFilter, activePaymentFilter, activePaymentModeFilter, authToken, circleId, filterCompleted, fromEpochDate, page, toEpochDate]",{"range":"109","text":"110"},[4403,4426],"[activeDeliveryFilter, activeOrderFilter, activePaymentFilter, activePaymentModeFilter, authToken, circleId, filterCompleted, fromEpochDate, page, toEpochDate]"]