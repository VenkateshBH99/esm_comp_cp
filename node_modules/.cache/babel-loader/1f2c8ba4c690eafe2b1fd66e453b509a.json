{"ast":null,"code":"import _slicedToArray from\"C:/Esamudaay/esm_comp_cp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import MultiSelect from\"react-multi-select-component\";import{jsx as _jsx}from\"react/jsx-runtime\";var Filters=function Filters(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var handleChange=function handleChange(e){setSelected(Array.isArray(e)?e.map(function(x){return x.value;}):[]);props.handleFilterChange(e);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(MultiSelect,{options:props.filterUtility,value:props.filterUtility.filter(function(obj){return selected.includes(obj.value);}),onChange:handleChange,labelledBy:\"Select\"})});};export default Filters;","map":{"version":3,"sources":["C:/Esamudaay/esm_comp_cp/src/Components/Filters.jsx"],"names":["React","useState","useEffect","MultiSelect","Filters","props","selected","setSelected","handleChange","e","Array","isArray","map","x","value","handleFilterChange","filterUtility","filter","obj","includes"],"mappings":"+IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,WAAP,KAAwB,8BAAxB,C,2CAIA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CAKzB,cAAgCJ,QAAQ,CAAC,EAAD,CAAxC,wCAAOK,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAE1BF,WAAW,CAACG,KAAK,CAACC,OAAN,CAAcF,CAAd,EAAmBA,CAAC,CAACG,GAAF,CAAO,SAAAC,CAAC,QAAKA,CAAAA,CAAC,CAACC,KAAP,EAAR,CAAnB,CAA4C,EAA7C,CAAX,CACAT,KAAK,CAACU,kBAAN,CAAyBN,CAAzB,EAED,CALD,CAQE,mBACI,kCAEF,KAAC,WAAD,EACE,OAAO,CAAEJ,KAAK,CAACW,aADjB,CAEE,KAAK,CAAEX,KAAK,CAACW,aAAN,CAAoBC,MAApB,CAA2B,SAAAC,GAAG,QAAIZ,CAAAA,QAAQ,CAACa,QAAT,CAAkBD,GAAG,CAACJ,KAAtB,CAAJ,EAA9B,CAFT,CAGE,QAAQ,CAAEN,YAHZ,CAIE,UAAU,CAAC,QAJb,EAFE,EADJ,CAaH,CA5BD,CA8BA,cAAeJ,CAAAA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MultiSelect from \"react-multi-select-component\";\r\n\r\n\r\n\r\nconst Filters = (props) => {\r\n    \r\n\r\n  \r\n\r\n  const [selected, setSelected] = useState([]);\r\n  \r\n  const handleChange = (e) => {\r\n\r\n    setSelected(Array.isArray(e) ? e.map( x => (x.value)) : []);\r\n    props.handleFilterChange(e);\r\n    \r\n  }\r\n\r\n\r\n    return (\r\n        <div>\r\n             \r\n      <MultiSelect\r\n        options={props.filterUtility}\r\n        value={props.filterUtility.filter(obj => selected.includes(obj.value))}\r\n        onChange={handleChange}\r\n        labelledBy=\"Select\"\r\n      />\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Filters;"]},"metadata":{},"sourceType":"module"}