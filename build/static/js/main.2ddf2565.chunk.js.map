{"version":3,"sources":["Utility/config.js","Utility/Style.js","Components/Counter.jsx","Components/Filters.jsx","Utility/paramsConvert.js","Components/DatePicker.jsx","Utility/filterList.js","Components/Content.jsx","Components/Title.jsx","App.js","reportWebVitals.js","index.js"],"names":["config","apiUrl","downloadUrl","blockStyle","root","padding","flexDiv1","display","justifyContent","card","width","backgroundColor","textAlign","title","fontSize","pos","marginBottom","useStyles","makeStyles","Counter","props","classes","className","Card","raised","CardContent","Typography","orderCount","Filters","useState","selected","setSelected","options","filterUtility","value","filter","obj","includes","onChange","e","Array","isArray","map","x","handleFilterChange","labelledBy","getDateFormat","date","d","Date","toDateString","hours","getHours","minutes","getMinutes","ampm","formatAMPM","getCustomerAddress","data","pretty_address","getDeliveryAgentName","profile_name","user_profile","phone","getDateEpoch","parse","DatePicker","React","fromDate","setFromDate","toDate","setToDate","clickedRefFrom","useRef","clickedRefTo","utils","DateFnsUtils","Grid","container","justify","disableToolbar","variant","format","margin","id","label","current","newFromDate","toString","replace","handleDateChange","String","slice","KeyboardButtonProps","newToDate","orderFilters","paymentFilters","deliveryFilters","paymentModeFilters","fileDownload","require","Content","tableData","setTableData","setorderCount","filterCompleted","setFilterCompleted","page","setPage","useParams","circleId","authToken","activeOrderFilter","setActiveOrderFilter","activePaymentFilter","setActivePaymentFilter","activeDeliveryFilter","setActiveDeliveryFilter","activePaymentModeFilter","setActivePaymentModeFilter","fromEpochDate","setFromEpochDate","toEpochDate","setToEpochDate","useEffect","localStorage","getItem","console","log","process","axios","get","headers","params","circle_id","order_status","join","delivery_type","payment_status","payment_mode","dt_last_modified_from","dt_last_modified_to","then","response","results","count","catch","error","alert","rows","item","key","order","order_short_number","Order_created_date","created","last_update","modified","Status","Seller","business_name","Order_amt","order_total","Delivery_type","Delivery_charges","delivery_charges","Other_charges","other_charges","Item_Total","item_total","Delivery_Agent","da_info","Payment_Status","payment_info","status","Payment_mode","via","Payment_id","payment_id","Customer_name","customer_name","Customer_number","customer_phones","Customer_address","delivery_address","long_id","order_id","spacing","xs","style","val","check","activeFilterFilter","paddingTop","Button","onClick","paddingLeft","color","toLocaleString","marginTop","TableContainer","component","Paper","height","overflow","Table","table","aria-label","TableHead","TableRow","minWidth","align","column","TableCell","TableBody","row","Pagination","scrollPaddingBottom","alignContent","Math","ceil","showFirstButton","showLastButton","Title","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ddf2565.chunk.js","sourcesContent":["let apiUrl = null;\r\nlet downloadUrl=null;\r\nif (process.env.NODE_ENV === 'development') {\r\n    apiUrl = 'https://api.test.esamudaay.com/api/v1/orders/';\r\n    downloadUrl= 'https://api.test.esamudaay.com/api/v1/orders/download?';\r\n}\r\nelse if(process.env.NODE_ENV === 'production')\r\n{\r\n    apiUrl = 'https://api.prod.esamudaay.com/api/v1/orders/';\r\n    downloadUrl= 'https://api.prod.esamudaay.com/api/v1/orders/download?';\r\n}\r\n\r\n\r\n\r\nconst config = {\r\n    apiUrl,\r\n    downloadUrl,\r\n};\r\n\r\nexport default config;\r\n","const blockStyle = {\r\n    root: {\r\n        padding: \"10px\",\r\n    },\r\n    flexDiv1: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\"\r\n    },\r\n    card: {\r\n        width: \"50%\",\r\n        backgroundColor: \"#ffffff\",\r\n        textAlign: \"center\",\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n}\r\nexport default blockStyle;","import React from 'react';\r\n\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport blockStyle from \"../Utility/Style\"\r\n\r\nconst useStyles = makeStyles(blockStyle);\r\n\r\n\r\nconst Counter = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <div className={classes.flexDiv1}>\r\n                <Card raised={true} className={classes.card}>\r\n                    <CardContent>\r\n                        <Typography>Orders Count</Typography>\r\n                        <Typography>{props.orderCount}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\nexport default Counter;","import React, { useState, useEffect } from 'react';\r\nimport MultiSelect from \"react-multi-select-component\";\r\n\r\n\r\n\r\nconst Filters = (props) => {\r\n    \r\n\r\n  \r\n\r\n  const [selected, setSelected] = useState([]);\r\n  \r\n  const handleChange = (e) => {\r\n\r\n    setSelected(Array.isArray(e) ? e.map( x => (x.value)) : []);\r\n    props.handleFilterChange(e);\r\n    \r\n  }\r\n\r\n\r\n    return (\r\n        <div>\r\n             \r\n      <MultiSelect\r\n        options={props.filterUtility}\r\n        value={props.filterUtility.filter(obj => selected.includes(obj.value))}\r\n        onChange={handleChange}\r\n        labelledBy=\"Select\"\r\n      />\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Filters;","\r\n\r\n\r\nconst getDateFormat = (date) => {\r\n    let d = new Date(date);\r\n    return d.toDateString() + \" | \" + formatAMPM(d);\r\n};\r\n\r\nfunction formatAMPM(date) {\r\n    var hours = date.getHours();\r\n    var minutes = date.getMinutes();\r\n    var ampm = hours >= 12 ? \"PM\" : \"AM\";\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12;\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\r\n    return strTime;\r\n}\r\nconst getCustomerAddress = (data) => {\r\n    try {\r\n        return data.pretty_address;\r\n    }\r\n    catch {\r\n        return null;\r\n    }\r\n};\r\nconst getDeliveryAgentName = (data) => {\r\n    try {\r\n        return data.profile_name + \"-\" + data.user_profile.phone;\r\n    }\r\n    catch {\r\n        return null;\r\n    }\r\n};\r\n\r\nconst getDateEpoch = (date) => {\r\n    return Date.parse(date)\r\n}\r\n\r\n\r\n\r\nexport { getCustomerAddress, getDateFormat, getDeliveryAgentName, getDateEpoch };\r\n\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport { getDateEpoch } from '../Utility/paramsConvert';\r\n\r\nexport default function DatePicker(props) {\r\n    // The first commit of Material-UI\r\n    const [fromDate, setFromDate] = React.useState(new Date());\r\n    const [toDate, setToDate] = React.useState(new Date());\r\n    const clickedRefFrom = React.useRef(false);\r\n    const clickedRefTo= React.useRef(false);\r\n    \r\n\r\n    const handleDateFromChange = (date) => {\r\n        let newFromDate=new Date(date.toString().replace(/[0-9][0-9]:.* GMT/,'00:00:00 GMT'));\r\n        clickedRefFrom.current = true;\r\n        setFromDate(newFromDate);\r\n        props.handleDateChange(String(getDateEpoch(newFromDate)).slice(0, 10), \"ChangeFrom\")\r\n\r\n\r\n\r\n    };\r\n    const handleDateToChange = (date) => {\r\n        let newToDate=new Date(date.toString().replace(/[0-9][0-9]:.* GMT/,'23:59:59 GMT'));\r\n        clickedRefTo.current = true;\r\n        setToDate(newToDate);\r\n        props.handleDateChange(String(getDateEpoch(newToDate)).slice(0, 10), \"ChangeTo\")\r\n\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justify=\"space-around\">\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Orders From\"\r\n                    value={clickedRefFrom.current? fromDate:null}\r\n                    onChange={handleDateFromChange}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                />\r\n                <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-dialog\"\r\n                    label=\"Orders To\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    value={clickedRefTo.current? toDate:null}\r\n                    onChange={handleDateToChange}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                />\r\n\r\n            </Grid>\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}","const orderFilters = [{\r\n    id: 11,\r\n    label: \"Created\",\r\n    value: \"CREATED\"\r\n},\r\n{\r\n    id: 12,\r\n    label: \"Completed\",\r\n    value: \"COMPLETED\"\r\n},\r\n{\r\n    id: 13,\r\n    label: \"Assigned to DA\",\r\n    value: \"ASSIGNED_TO_DA\"\r\n},\r\n{\r\n    id: 14,\r\n    label: \"Merchant Updated\",\r\n    value: \"MERCHANT_UPDATED\"\r\n},\r\n{\r\n    id: 15,\r\n    label: \"Customer Pending\",\r\n    value: \"CUSTOMER_PENDING\"\r\n},\r\n{\r\n    id: 16,\r\n    label: \"Provider Cancelled \",\r\n    value: \"PROVIDER_CANCELLED\"\r\n},\r\n{\r\n    id: 17,\r\n    label: \"Ready for Pickup \",\r\n    value: \"READY_FOR_PICKUP\"\r\n},\r\n{\r\n    id: 18,\r\n    label: \"Merchant Accepted\",\r\n    value: \"MERCHANT_ACCEPTED\"\r\n},\r\n{\r\n    id: 19,\r\n    label: \"Requesting to DA\",\r\n    value: \"REQUESTING_TO_DA\"\r\n},\r\n\r\n{\r\n    id: 20,\r\n    label: \"Picked Up By DA\",\r\n    value: \"PICKED_UP_BY_DA\"\r\n}];\r\n\r\nconst paymentFilters = [\r\n\r\n\r\n    {\r\n        id: 12,\r\n        label: \"Initiated\",\r\n        value: \"INITIATED\"\r\n    },\r\n    {\r\n        id: 13,\r\n        label: \"Approved\",\r\n        value: \"APPROVED\"\r\n    },\r\n    {\r\n        id: 14,\r\n        label: \"Rejected\",\r\n        value: \"REJECTED\"\r\n    },\r\n    {\r\n        id: 15,\r\n        label: \"Success\",\r\n        value: \"SUCCESS\"\r\n    },\r\n    {\r\n        id: 16,\r\n        label: \"Fail \",\r\n        value: \"FAIL\"\r\n    },\r\n    {\r\n        id: 17,\r\n        label: \"Refund Success \",\r\n        value: \"REFUND_SUCCESS\"\r\n    },\r\n    {\r\n        id: 18,\r\n        label: \"Refund Fail\",\r\n        value: \"REFUND_FAIL\"\r\n    },\r\n    {\r\n        id: 19,\r\n        label: \"Pending\",\r\n        value: \"PENDING\"\r\n    }];\r\n\r\nconst deliveryFilters = [\r\n    {\r\n        id: 12,\r\n        label: \"Self Pickup\",\r\n        value: \"SELF_PICK_UP\"\r\n    },\r\n    {\r\n        id: 13,\r\n        label: \"DA Delivery\",\r\n        value: \"DA_DELIVERY\"\r\n    }];\r\n\r\nconst paymentModeFilters = [\r\n    {\r\n        id: 12,\r\n        label: \"Cash On Delivery\",\r\n        value: \"COD\"\r\n    },\r\n    {\r\n        id: 14,\r\n        label: \"UPI\",\r\n        value: \"UPI\"\r\n    },\r\n    {\r\n        id: 15,\r\n        label: \"NetBanking\",\r\n        value: \"NETBANKING\"\r\n    },\r\n    {\r\n        id: 16,\r\n        label: \"Wallet\",\r\n        value: \"WALLET\"\r\n    },\r\n    {\r\n        id: 17,\r\n        label: \"Card\",\r\n        value: \"CARD\"\r\n    },\r\n];    \r\n\r\n\r\nexport { orderFilters, paymentFilters, deliveryFilters, paymentModeFilters};","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { Button } from 'react-bootstrap';\r\nimport DownloadButton from '@material-ui/core/Button';\r\n\r\nimport axios from 'axios';\r\nimport config from '../Utility/config';\r\nimport blockStyle from '../Utility/Style';\r\nimport Counter from '../Components/Counter';\r\nimport Filters from '../Components/Filters';\r\nimport DatePicker from '../Components/DatePicker'\r\nimport { orderFilters, paymentFilters,deliveryFilters, paymentModeFilters } from '../Utility/filterList';\r\nimport { getCustomerAddress, getDateFormat, getDeliveryAgentName } from \"../Utility/paramsConvert\";\r\nconst useStyles = makeStyles(blockStyle);\r\nvar fileDownload = require('js-file-download');\r\n\r\nconst Content = (props) => {\r\n  const classes = useStyles();\r\n  const [tableData, setTableData] = useState([]);\r\n  const [orderCount, setorderCount] = useState(0);\r\n  const [orderSum, setorderSum] = useState(0);\r\n  const [orderSeller, setorderSeller] = useState(0);\r\n  const [customer, setcustomer] = useState(0);\r\n  const [orderStatus, setorderStatus] = useState({});\r\n  const [filterCompleted, setFilterCompleted] = useState(true)\r\n  const [page, setPage] = useState(1);\r\n  const { circleId, authToken } = useParams();\r\n  const [activeOrderFilter, setActiveOrderFilter] = useState([]);\r\n  const [activePaymentFilter, setActivePaymentFilter] = useState([]);\r\n  const [activeDeliveryFilter, setActiveDeliveryFilter] = useState([]);\r\n  const [activePaymentModeFilter, setActivePaymentModeFilter] = useState([]);\r\n  const [fromEpochDate, setFromEpochDate] = useState();\r\n  const [toEpochDate, setToEpochDate] = useState();\r\n\r\n \r\n  const onOrderFilterChange = (filter) => {\r\n    setActiveOrderFilter(Array.isArray(filter) ? filter.map( filter => (filter.value)) : []);\r\n    filter.map(x=>activeOrderFilter.includes(x.value));\r\n    setFilterCompleted(!filterCompleted)\r\n  }\r\n\r\n  const onPaymentFilterChange = (filter) => {\r\n    \r\n    setActivePaymentFilter(Array.isArray(filter) ? filter.map( filter => (filter.value)) : []);\r\n    setFilterCompleted(!filterCompleted)\r\n  }\r\n\r\n  const onDeliveryFilterChange = (filter) => {\r\n    setActiveDeliveryFilter(Array.isArray(filter) ? filter.map( filter => (filter.value)) : []);\r\n    setFilterCompleted(!filterCompleted)\r\n  }\r\n\r\n  const onPaymentModeFilterChange = (filter) => {\r\n\r\n    setActivePaymentModeFilter(Array.isArray(filter) ? filter.map( filter => (filter.value)) : []);\r\n    setFilterCompleted(!filterCompleted)\r\n  }\r\n\r\n\r\n  const changePage = (e, value) => {\r\n\r\n    setPage(value)\r\n\r\n\r\n  }\r\n\r\n  const onDateEpochChange = (val, check) => {\r\n    if (check === \"ChangeFrom\") {\r\n      setFromEpochDate(val)\r\n\r\n    }\r\n    else if (check === \"ChangeTo\") {\r\n      setToEpochDate(val)\r\n    }\r\n    setFilterCompleted(!filterCompleted)\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const token = localStorage.getItem(\"authenticationToken\");\r\n    const circleID = localStorage.getItem(\"circle_id\");\r\n\r\n    console.log(process.env.NODE_ENV);\r\n    //Making API call to backend\r\n    axios.get(config.apiUrl, {\r\n      headers: {\r\n        'Authorization': \"JWT \" + { authToken }.authToken\r\n      },\r\n      params: {\r\n        circle_id: { circleId }.circleId,\r\n        order_status: activeOrderFilter.join(),\r\n        page: page,\r\n        delivery_type: activeDeliveryFilter.join(),\r\n        payment_status: activePaymentFilter.join(),\r\n        payment_mode: activePaymentModeFilter.join(),\r\n        dt_last_modified_from: fromEpochDate,\r\n        dt_last_modified_to: toEpochDate\r\n      }\r\n    })\r\n      .then(response => {\r\n        // alert(\"success\")\r\n        setTableData(response.data.results)\r\n        setorderCount(response.data.count)\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Unauthorize or slow internet\")\r\n      })\r\n\r\n  }, [filterCompleted, page])\r\n\r\n  const downloadAPI=()=>{\r\n    const token = localStorage.getItem(\"authenticationToken\");\r\n    const circleID = localStorage.getItem(\"circle_id\");\r\n    \r\n    //Making API call to backend\r\n    axios.get(config.downloadUrl, {\r\n      headers: {\r\n        'Authorization': \"JWT \" + { authToken }.authToken\r\n      },\r\n      params: {\r\n        circle_id: { circleId }.circleId,\r\n        order_status: activeOrderFilter.join(),\r\n        delivery_type: activeDeliveryFilter.join(),\r\n        payment_status: activePaymentFilter.join(),\r\n        payment_mode: activePaymentModeFilter.join(),\r\n        dt_last_modified_from: fromEpochDate,\r\n        dt_last_modified_to: toEpochDate\r\n        \r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(Date().toLocaleString());\r\n        fileDownload(response.data, 'Order Data ('+Date().toString()+').csv');\r\n        \r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Unauthorize or slow internet\")\r\n      })\r\n  }\r\n\r\n  const rows = (tableData.map((item, key) => {\r\n    \r\n    return {\r\n      id: item.order.order_short_number,\r\n      Order_created_date: getDateFormat(item.order.created),\r\n      last_update: getDateFormat(item.order.modified),\r\n      Status: item.order.order_status,\r\n      Seller: item.order.business_name,\r\n      Order_amt: item.order.order_total,\r\n      Delivery_type: item.order.delivery_type,\r\n      Delivery_charges: item.order.delivery_charges,\r\n      Other_charges: item.order.other_charges,\r\n      Item_Total: item.order.item_total,\r\n      Delivery_Agent: getDeliveryAgentName(item.order.da_info),\r\n      Payment_Status: item.order.payment_info.status,\r\n      Payment_mode: item.order.payment_info.via,\r\n      Payment_id: item.order.payment_info.payment_id,\r\n      Customer_name: item.order.customer_name,\r\n      Customer_number: item.order.customer_phones,\r\n      Customer_address: getCustomerAddress(item.order.delivery_address),\r\n      long_id: item.order.order_id\r\n\r\n    }\r\n  }))\r\n\r\n  const columns = [\r\n    { id: \"id\", label: \"OrderId\", minWidth: 50, align: 'left' },\r\n    { id: \"Order_created_date\", label: \"Order Created Date\", minWidth: 100, align: 'left' },\r\n    { id: \"last_update\", label: \"Order Last Update Date\", minWidth: 100, align: 'left' },\r\n    { id: \"Status\", label: \"Status\", minWidth: 50, align: 'left' },\r\n    { id: \"Seller\", label: \"Seller\", minWidth: 50, align: 'left' },\r\n    { id: \"Order_amt\", label: \"Order Amt\", minWidth: 50, align: 'left' },\r\n    { id: \"Delivery_Type\", label: \"Delivery Type\", minWidth: 50, align: 'left' },\r\n    { id: \"Delivery_Charges\", label: \"Delivery Charges\", minWidth: 50, align: 'left' },\r\n    { id: \"Other_charges\", label: \"Other Charges\", minWidth: 50, align: 'left' },\r\n    { id: \"Item_Total\", label: \"Item Total\", minWidth: 50, align: 'left' },\r\n    { id: \"Delivery_Agent\", label: \"Delivery Agent\", minWidth: 50, align: 'left' },\r\n    { id: \"Payment_Status\", label: \"Payment Status\", minWidth: 50, align: 'left' },\r\n    { id: \"Payment_mode\", label: \"Payment Mode\", minWidth: 50, align: 'left' },\r\n    { id: \"Payment_id\", label: \"Payment id\", minWidth: 50, align: 'left' },\r\n    { id: \"Customer_name\", label: \"Customer Name\", minWidth: 50, align: 'left' },\r\n    { id: \"Customer_number\", label: \"Customer Number\", minWidth: 50, align: 'left' },\r\n    { id: \"Customer_address\", label: \"Customer Address\", minWidth: 50, align: 'left' },\r\n    { id: \"long_id\", label: \"Long OrderId\", minWidth: 50, align: 'left' },\r\n  ];\r\n\r\n  \r\n\r\n  return (\r\n\r\n\r\n    <div className={classes.root}>\r\n\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item xs={4} style={{ padding: \"10px\" }}>\r\n            <DatePicker handleDateChange={onDateEpochChange} ></DatePicker>\r\n        </Grid>\r\n\r\n        <Grid item xs={2} style={{ padding: \"4px\" }}>\r\n            <h4>ORDER STATUS</h4>\r\n          <Filters handleFilterChange={onOrderFilterChange}  activeFilterFilter={activeOrderFilter} filterUtility={orderFilters} ></Filters>\r\n            <h4>DELIVERY STATUS</h4>\r\n          <Filters handleFilterChange={onDeliveryFilterChange}  activeFilterFilter={activeDeliveryFilter} filterUtility={deliveryFilters}></Filters> \r\n        </Grid>\r\n\r\n        <Grid item xs={2} style={{ padding: \"4px\" }}>\r\n            <h4>PAYMENT STATUS</h4>\r\n          <Filters handleFilterChange={onPaymentFilterChange}  activeFilterFilter={activePaymentFilter} filterUtility={paymentFilters}></Filters>\r\n            <h4>PAYMENT MODE</h4>\r\n          <Filters handleFilterChange={onPaymentModeFilterChange}  activeFilterFilter={activePaymentModeFilter} filterUtility={paymentModeFilters}></Filters>      \r\n        </Grid>\r\n\r\n        <Grid item xs={3} style={{ paddingTop: \"60px\" }}>\r\n          <Counter orderCount={orderCount} />\r\n        </Grid>\r\n\r\n      </Grid>\r\n     \r\n\r\n      <Grid container spacing={3} style={{ paddingTop: \"30px\"}} >\r\n        <Grid item xs={1} >\r\n          <Button onClick={() => {\r\n            setFromEpochDate();\r\n            setToEpochDate();\r\n            setFilterCompleted(!filterCompleted)\r\n          }}>\r\n            <RefreshIcon >\r\n            </RefreshIcon>\r\n          </Button>\r\n        </Grid>\r\n        \r\n        <Grid item xs={1} style={{ paddingLeft: \"5px\" }}>\r\n          {/* <h4>Download File</h4> */}\r\n          <DownloadButton variant=\"contained\" color=\"primary\" onClick={downloadAPI}>Download</DownloadButton>\r\n        </Grid>\r\n\r\n      </Grid>\r\n  \r\n      <div style={{ marginTop: \"0em\" }}>\r\n\r\n        <Grid container spacing={3}>\r\n          \r\n          <Grid item xs={12}>\r\n            <TableContainer component={Paper} style={{ height: \"100%\", width: \"100%\", display: \"block\", overflow: \"auto\" }}>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (<TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{\r\n                        minWidth: column.minWidth,\r\n\r\n                      }}\r\n                    >\r\n                       <strong>{column.label}</strong>\r\n                    </TableCell>))}\r\n\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.map((row) => {\r\n\r\n                    return row ?\r\n                      (\r\n                        <TableRow key={row.id}>\r\n                          <TableCell align=\"left\">{row.id}</ TableCell>\r\n                          <TableCell align=\"left\">{row.Order_created_date}</TableCell>\r\n                          <TableCell align=\"left\">{row.last_update}</TableCell>\r\n                          <TableCell align=\"left\">{row.Status}</TableCell>\r\n                          <TableCell align=\"left\">{row.Seller}</TableCell>\r\n                          <TableCell align=\"left\">{row.Order_amt}</TableCell>\r\n                          <TableCell align=\"left\">{row.Delivery_type}</TableCell>\r\n                          <TableCell align=\"left\">{row.Delivery_charges}</TableCell>\r\n                          <TableCell align=\"left\">{row.Other_charges}</TableCell>\r\n                          <TableCell align=\"left\">{row.Item_Total}</TableCell>\r\n                          <TableCell align=\"left\">{row.Delivery_Agent}</TableCell>\r\n                          <TableCell align=\"left\">{row.Payment_Status}</TableCell>\r\n                          <TableCell align=\"left\">{row.Payment_mode}</TableCell>\r\n                          <TableCell align=\"left\">{row.Payment_id}</TableCell>\r\n                          <TableCell align=\"left\">{row.Customer_name}</TableCell>\r\n                          <TableCell align=\"left\">{row.Customer_number}</TableCell>\r\n                          <TableCell align=\"left\">{row.Customer_address}</TableCell>\r\n                          <TableCell align=\"left\">{row.long_id}</TableCell>\r\n\r\n                        </TableRow>\r\n                      ) : null\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n\r\n            <Pagination style={{ paddingTop: \"20px\", scrollPaddingBottom: \"20px\", alignContent: \"center\" }} count={Math.ceil(orderCount / 10)} onChange={changePage} showFirstButton showLastButton />\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Content;","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst Title = () => {\r\n    return (\r\n\r\n        <div className=\"stock-container\"></div>\r\n\r\n    );\r\n};\r\nexport default Title;","import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Content from './Components/Content';\r\nimport Title from './Components/Title';\r\n\r\n\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Title></Title>\r\n      <BrowserRouter>\r\n        <Switch>\r\n\r\n          <Route path=\"/:circleId/:authToken\" >\r\n\r\n            <Content></Content>\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}